BACKUPS - DB, Filegroup, File

		Database Backups, Filegroup Backups
		Log File Backups and Log Truncations
		COPY_ONLY Backups 
		Mirror backups
		Split Backups
		Partial Backups
		Backup Verification, RetainDays, Stats
		Backup Audits. HOT and COLD Backups
		Format, Compression and Checksum
		ContinueOnError and Backup Scripts
		


Topics: Backups and recovery SQL Server
	https://www.sqlshack.com/understanding-the-data-management-life-cycle/
	https://www.sqlshack.com/database-backup-and-restore-process-in-sql-server-series-intro/
	https://www.red-gate.com/simple-talk/sql/database-administration/understanding-sql-server-recovery-models/
 
Recovery models:
****************
Recovery model determines to what extent the databases can be backed up and restored.
	There are 3 types of Recovery models
		- simple
		- Full 
		- bulk-logged
 
	SIMPLE recovery Model:
		In this model, all the databases transactions are still written to Transaction log file. once checkpoint occurs all the
		logs written in tlog file will be removed. Point in time recovery not possible.
	 
	Full Recovery Model: recovers all log files & full backup. Useful in point-in-time recovery.

Backups
	• Full
	• Differential
	• Transactional Log (T-Log)
	• Copy-Only
	• File
	• FileGroup
	• Partial
	• Mirror

About media set
	https://www.bobpusateri.com/archive/2015/11/sql-server-backup-terminology-part-1-media-sets-backup-sets-2/
	http://dinesql.blogspot.com/2016/12/sql-server-backup-media-set-media-family-backup-set.html
	https://www.sqlshack.com/understanding-sql-server-backup-types/

	Copy-only backup:
			▪ these backups are taken without affecting LSN (log sequence number).
			▪ Used for experimental purposes only. 
			▪ Usually in production environments, backups that are taken will have LSN sequences and its crucial for restoring purposes.
			Syntax: 
            BACKUP DATABASE AdventureWorks TO DISK = 'D:\WithoutCopyOnly_AdventureWorks.bak'
    		WITH COPY_ONLY
            GO
	Mirror backups:   
			Copy of normal backups will be copied to different locations/devices. Max of 3 copy is possible.
			Syntax: 
            BACKUP DATABASE AdventureWorks 
			     TO DISK = 'C:\Backup\SingleFile\AdventureWorks.bak'
				MIRROR TO DISK = 'C:\Backup\MirrorFile\AdventureWorks.bak'
				WITH FORMAT
				GO
	Partial backups:
			▪ Partial backups possible for FULL & Differential backups. A partial backup can be completed only by using T-SQL.
			▪ allows backup of 
				• PRIMARY filegroup,  
				• Read-Write filegroups and
				• any optionally specified files.  
			This is a good option if you have Read-Only filegroups in the database and do not want to backup the entire database all of the time.
			▪ If a filegroup is changed from Read-Only to Read-Write it will be included in the next Partial backup, but if you change a filegroup from Read-Write to Read-Only you should create a filegroup backup, since this filegroup will not be included in the next Partial backup.
			▪ A Partial backup can be issued for either a Full or Differential backup.  This cannot be used for Transaction Log backups. 
		
		Syntax: Create a SQL Server full partial backup
			
			BACKUP DATABASE TestBackup READ_WRITE_FILEGROUPS
			TO DISK = 'C:\TestBackup_Partial.BAK'
			GO
			
			Create a SQL Server differential partial backup
			
			BACKUP DATABASE TestBackup READ_WRITE_FILEGROUPS
			TO DISK = 'C:\TestBackup_Partial.DIF'
			WITH DIFFERENTIAL
			GO
	
	Tail log backup: 
	***************
		https://blog.sqlauthority.com/2018/03/07/sql-server-tail-log-backups/
		https://www.sqlshack.com/tail-log-backup-and-restore-in-sql-server/
		https://docs.microsoft.com/en-us/sql/relational-databases/backup-restore/tail-log-backups-sql-server?view=sql-server-ver15
		
			• introduced in SQL Server 2005.
			• works only when full backup is taken & if recovery model is in FULL/Bulk-logged.
			• When the database is damaged or corrupted, try to initiate a tail-log backup by using the WITH CONTINUE_AFTER_ERROR option of the BACKUP statement.
			BACKUP LOG <db_name1> TO DISK = 'f:\PowerSQL\db_name1_taillog.log'
			WITH CONTINUE_AFTER_ERROR;
			GO
			 
		in below example, check Back up the tail of the log, and leave database in the restoring state.
		 command: 
			BACKUP LOG <database_name> TO <backup_device> WITH NORECOVERY
			•  This example backs up the currently active transaction log when a database is damaged and inaccessible, if the transaction log is undamaged and accessible. Back up the tail of the log by running the following basic BACKUP statement:
		 command:
			BACKUP LOG <database_name> TO <backup_device>   
			   WITH NORECOVERY, NO_TRUNCATE;  
			▪ Tail log backup possible for bulk-logged  and full backup.
			▪ back up the tail of the log of the primary database before failing over a log shipping configuration.
			▪ Tail log backups capture the tail of the log even if the database is offline, damaged, or missing data files. This might cause incomplete metadata from the restore information commands and msdb. However, only the metadata is incomplete; the captured log is complete and usable.
		 
		Scenarios That Require a Tail-Log Backup
		We recommend that you take a tail-log backup in the following scenarios:
			1) If the database is online and you plan to perform a restore operation on the database, begin by backing up the tail of the log. 
			To avoid an error for an online database, you must use the ... WITH NORECOVERY option of the BACKUP Transact-SQL statement.
			2) If a database is offline and fails to start and you need to restore the database, first back up the tail of the log. Because no transactions can occur at this time, using the WITH NORECOVERY is optional.
			3) If a database is damaged, try to take a tail-log backup by using the WITH CONTINUE_AFTER_ERROR option of the BACKUP statement.
			 for short duration for restoring large database, using tail log backup helps.
		https://www.sqlshack.com/tail-log-backup-and-restore-in-sql-server/
				
	Hot & cold backup
    ---------------------
		https://sqlbak.com/blog/backing-database-files-offline-mode
		http://www.sqlnotes.info/2011/10/02/cold-and-hot-backup/

	Hot backup allows the end user to backup the database while it is running. 
	Cold backup is when you make a simple copy of the data and log files.  For this to work, the database should be taken offline first. 
		In this case, SQL Server could not hold exclusive locks to the database file. In following circumstances you could do cold backup
		
			▪ When SQL Server service is off, you are free to do cold backup.
			▪ While a database is taking offline
			▪ When a database is set to read-only in SQL Server 2005/2008
			▪ When a database is detached
			▪ Resource database in SQL Server 2005/2008 while SQL Server is running
				• For resource database, you could only do cold backup.
			▪ You could backup tempdb but you have to shut down the SQL Service and the database will be recreated every time when the server starts up.
				• You may fail to attach tempdb files with difference name when there are any encrypted database before shutting down the server.

Backup interview questions
------------------------------------
	How do you find the database version of SQL Server by using the backup file?
		○ RESTORE HEADERONLY FROM DISK = N'F:\PowerSQL\PowerSQL.BAK'
	How do you find software that was used to create the database backup?
        - RESTORE LABELONLY FROM DISK = N'F:\PowerSQL\PowerSQL.BAK'