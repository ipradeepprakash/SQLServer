
SQL Trace Architecture
**********************
Ref: pluralsight.com -- jonathan kehayias

SQL trace is a low-level, server-side event in sql server that is used to
	- Troubleshooting performance
	- Auditing activity
	- Collecting sample data for testing & performance analysis.
	- Debugging t-sql, stored procs.

Several components work together to allow trace information to be captured.
	- SQL trace controller
	- Event providers
	- Events
	- I/O Providers
	- External profiler application

SQL trace controller
--------------------------
	- Central component that manages all of the traces created in instance.
	- Trace provides 2 specific functions.
		○ Event Synchronous queue: a centralized queue where event info gets queued before it is distributed to active traces running on server.
		○ Global event bitmap: for tracking which events have been enabled by active trace on server.
			
Event producers
---------------------
	- Generates/produces data associated with events that have been enabled by active trace in server.
	- By default, all events are disabled in sql server.
	- Whenever trace is started by user, trace controller updates the event in event bitmap to enable for the trace that are active in sql server and collecting info. Now, all the events info are collected and fed to controller for synchronizing & distribution.

Events
---------
	- Is a known point in code execution in sql server. (i.e. sql statement completed, sp statement completed)
	- An event fires when it reached and event is enabled for captured.

Traces:
---------
	- Collects specific list of events and columns based on trace definition.
	- Once trace captures the data, if filters required data and sends the rest to I/O providers.

I/O Providers
----------------------
	- Are the final consumers of data for trace data. 2 I/O providers exists for SQL trace
		○ Server side file provider: is designed that no data is lost.
		○ Client rowset provider: doesn not guarentee no event data loss, but its for streaming data to client application (like profiler)


When to use SQL trace
*********************
	- In response to an error or alert to gather additional information.
	- Performance tuning or during integration testing.

Security concerns
******************
Min permission: ALTER TRACE
	- Since the permission is given at server level, event data of all the databases will be exposed not just specific to one database.
	- Prior to SQL server 2005, only sysadmin at server level was the only login that helped get the trace data for user. After sql 2005, ALTER TRACE to login was less risker w.r.t security concerns.
	- Sensitive data like password, encrypted data will be masked while running the trace.


Using SQL server Profiler
*********************
